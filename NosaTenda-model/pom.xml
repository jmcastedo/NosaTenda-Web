<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
  	<groupId>es.udc.jcastedo.NosaTenda</groupId>
  	<artifactId>NosaTenda</artifactId>
  	<version>0.0.2-SNAPSHOT</version>
  </parent>
  <artifactId>NosaTenda-model</artifactId>
  <packaging>jar</packaging>
  
  <name>NosaTenda Model API</name>
  <url>http://maven.apache.org</url>  
  
  <dependencies>
  
	<!--  JUnit  -->
	<dependency>
  		<groupId>junit</groupId>
  		<artifactId>junit</artifactId>
  		<version>4.11</version>
  		<scope>test</scope>
	</dependency>
	
	<!--  JDBC driver  -->
	<dependency>
		<groupId>${jdbcDriver.groupId}</groupId>
		<artifactId>${jdbcDriver.artifactId}</artifactId>
		<version>${jdbcDriver.version}</version>
	</dependency>
	
	<!--  Hibernate -->
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-core</artifactId>
		<version>4.3.6.Final</version>
	</dependency>
	
	<!-- Spring -->
	
	<!-- I left all Spring dependencies used for clearance and academic purpose  -->
	
	<!-- Core utilities used by other modules. Define this if you use Spring   
            Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
    <dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-core</artifactId>
		<version>${spring.version}</version>
		<exclusions>
			<!-- Since we use SLF4J for logging, we replace commons-logging with the SLF4J-JCL bridge -->
         	<exclusion>
           		<groupId>commons-logging</groupId>
           		<artifactId>commons-logging</artifactId>
         	</exclusion>
      	</exclusions>
	</dependency>
	
    <!-- Expression Language (depends on spring-core) Define this if you use   
            Spring Expression APIs (org.springframework.expression.*) -->
    <dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-expression</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- Application Context (depends on spring-core, spring-expression, spring-aop,   
            spring-beans) This is the central artifact for Spring's Dependency Injection   
            Container and is generally always defined -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define   
            this if you use Spring Bean APIs (org.springframework.beans.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-beans</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- Support for testing Spring applications with tools such as JUnit and   
            TestNG This artifact is generally always defined with a 'test' scope for   
            the integration testing framework and unit testing stubs -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-test</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- Transaction Management Abstraction (depends on spring-core, spring-beans,   
            spring-aop, spring-context) Define this if you use Spring Transactions or   
            DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-tx</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA,   
            and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx)   
            Define this if you need ORM (org.springframework.orm.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core,   
            spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context,   
            spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
    <dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- Logging -->
	
	<!-- more info in: http://spring.io/blog/2009/12/04/logging-dependencies-in-spring/ -->
	
	<!-- to use SLF4J with Spring we need to replace the commons-logging dependency with the SLF4J-JCL bridge -->
	<!-- logging calls from within Spring will be translated into logging calls to the SLF4J API -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>jcl-over-slf4j</artifactId>
		<version>1.7.7</version>
		<scope>runtime</scope>
	</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>1.7.7</version>
		<scope>runtime</scope>
	</dependency>
	<!-- explicit binding from SLF4J to Log4J -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
		<version>1.7.7</version>
		<scope>runtime</scope>
	</dependency>
	<dependency>
		<groupId>log4j</groupId>
		<artifactId>log4j</artifactId>
		<version>1.2.17</version>
		<scope>runtime</scope>
	</dependency>

  </dependencies>
  
</project>